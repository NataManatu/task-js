// создали пустой массив
// var arr = new Array();
// // заполнили его значениями
// arr[0] = 34;
// arr[1] = 99;
// arr[2] = 100;
// // создали массив с длиной 3
// var arr2 = new Array(3);
// // заполнили его значениями
// arr2[0] = 111;
// arr2[1] = 56;
// arr2[2] = 73;
// // теперь длина массива увеличилась на 2 элемента
// arr2[3] = 333;
// arr2[4] = 999;
// // создали массив и сразу записали в него три значения
// var arr3 = new Array("music","guitar","apple");
// // добавили ещё один элемент
// arr3[3] = "lemon";



// var arr = new Array(10,20);
// // отображаем значение нулевого элемента
// // 10
// alert(arr[0]);
// // с помощью alert можно показывать весь массив сразу
// // элементы массива будут перечислены через запятую
// alert(arr);
// // показываем длину массива
// // 2
// alert(arr.length);



// var arr = new Array();
// // реальных заполненных элементов один
// arr[499] = 86;
// // на экране 500
// // length это последний индекс + 1
// alert(arr.length);
// // при обращении к неинициализированному элементу
// // отобразится undefined
// alert(arr[0]);


// var arr = new Array(11, 74, 35);
// // делаем размер массива равным 2
// // значение 35 потеряно навсегда
// arr.length = 2;
// // на экране 11,74
// alert(arr);
// // а теперь размер массива 5, но
// // заданы значения только двум элементам
// // arr[0] = 11
// // arr[1] = 74
// arr.length = 5;
// alert(arr);
// // теперь размер массива 0
// // все значения утеряны навсегда
// arr.length = 0;
// alert(arr)



// Создание массива второй способ


// создаём пустой массив
// var arr = [];
// // записали в него 2 элемента
// arr[0] = 11;
// arr[1] = 12;
// // 11,12
// alert(arr.length);
// // создаём массив с тремя элементами
// var arr= [88,99,111];
// // 88,99,11
// alert(arr);
// // создаём массив с тремя элементами
// var cars = ["BMW","Audi","Toyota"];
// // "BMW","Audi","Toyota"
// alert(cars);
// // 3
// alert(cars.length);

// Добавим в наш багаж пример перебора
// массива с помощью цикла

// var arr = [2, 9, 33, 1];
// var amt = 0;
// // считаем в цикле сумму элементов массива

// for (var i = 0; i < arr.length; i++) {
//     amt = amt + arr[i];
// }
// // результат 45
// alert(amt);


// И ещё пример. Отобразим содержимое массива с элементами разного типа.

// var arr = [33, "sun", 12, "planet"];
// for (var i = 0; i < arr.length; i++) {
//     alert(arr[i]);

// }

// Теперь настало время создать двумерный массив.

// создали двумерный массив 2 строки 3 столбца
// 1 3 5
// 2 7 8
// var arr = [
//     [1, 3, 5],
//     [2, 7, 8]
// ];
// // 1
// alert(arr[0][0]);
// // 8
// alert(arr[1][2]);


// функция записывает новое значение по указанному
// индексу
// function SetValue(arr, index, newValue) {
//     arr[index] = newValue;
// }
// var arr = [88, 11, 3];
// alert(arr);
// // 88,11,3
// SetValue(arr, 0, 999);

// alert(arr);
// // 999,11,3


// Начнем с методов для поиска. Это indexOf и lastIndexOf. Первый ищет совпадение в массиве слева направо.

// var arr = [1,45,-3,78,1];
// // ищем значение 45
// // на экране индекс 1
// alert(arr.indexOf(45));
// // ищем значение, которого нет в массиве
// index = arr.indexOf(99);
// // на экране -1, так как 99 нет в массиве
// alert(index);



// var arr = [12,45,-3,82,12,78,12];
// // счетчик для подсчета количества раз вхождения
// // искомого значения в массив
// // искать будем значение 12
// var counter = 0;
// var index = arr.indexOf(12);
// while(index != -1){
//  counter++;
//  // двигаемся дальше по массиву за счет изменения
//  // индекса на значение индекс+1
//  index = arr.indexOf(12,index+1);
// }
// // на экране 3
// alert(counter);


/* А теперь посчитаем сколько раз встречается искомое
значение в массиве при помощи lastIndexOf. */

// var arr = [12,45,-3,82,12,78,12];
// // счетчик для подсчета количества раз вхождения
// // искомого значения в массив
// // искать будем значение 12
// var counter = 0;
// var index = arr.lastIndexOf(12);
// while(index != -1){
//  counter++;
//  // мы проверяем на ноль
//  // так как ниже начинаем с index-1
//  // при 0 мы получим старт -1
//  // для метода lastIndexOf отрицательный индекс
//  // означает искать с конца массива
//  if(index == 0)
//  break;
//  // двигаемся дальше по массиву за счет изменения
//  // индекса на значение индекс-1
//  index = arr.lastIndexOf(12,index-1);
// }
// // на экране 3
// alert(counter);


//sort()

// var arr = [10, 1, 3, 33, 6];
// arr.sort();
// // 1 10 3 33 6
// alert(arr);

// /* Рассмотрим пример сортировки данных по возрастанию: */

// function compareFunc(a, b) {
//     if (a > b)
//         return 1;
//     else if (b > a)
//         return -1;
//     else
//         return 0;
// }
// var arr = [10, 1, 3, 33, 6];
// // 1 3 6 10 33
// arr.sort(compareFunc);


/*  А теперь сортировка по убыванию */

// function compareFunc(a, b) {
//     if (a > b)
//         return -1;
//     else if (b > a)
//         return 1;
//     else
//         return 0;
// }
// var arr = [10, 1, 3, 33, 6];

// // 33 10 6 3 1
// arr.sort(compareFunc);
// alert(arr);

//split
// var str = "apple,onion,strawberry";
// // разбиваем на основании ,
// // в массиве будет три элемента apple onion strawberry
// var arr = str.split(',');
// // apple на экране
// alert(arr[0]);


//join

// var arr = ["bmw","audi","opel"];
// // создаем строку
// // в качестве разделительного символа между элементами
// // массива указываем *
// var str = arr.join("*");
// // bmw*audi*opel
// alert(str);
// // если не указать разделитель, то будет использована,
// var str2 = arr.join();
// // bmw,audi,opel
// alert(str2);